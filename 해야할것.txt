우선순위

렌더순서 std::vector 로 정하기.

정렬 기준이 변동, 정렬 대상이 가진 값이 변동,
삭제시 마지막요소와 자리를 바꾼후 삭제.
정렬은 매 프레임마다 일정 시기 한번에만 이루어진다는 조건하에
vector가 최적화

0. tileinfomanager 코딩하기


0. 모든 액터가 자신의 좌표 위치뿐만 아니라, 타일 위치를 가지도록하기.
스폰은 타일 위치를 인자로 스폰하기
각 타일좌표마다 리스트가 존재 (15 x 13)개.
특정 타일에 존재유무를 체크할때 이 리스트를 활용.
액터가 이동할때마다 타일체크, 타일 위치가 변동했을시
가진 타일 위치 멤버 변수 갱신, 타일좌표 리스트에서 제거 후 이동.




1. 타일맵 에디터, 타일맵 직렬화, 타일맵 역직렬화 만들기
-> 파일 직렬화, 역직렬화는 Base 프로젝트에 구현하지만,
이것을 "맵"파일이라고 해석할지는 GameContents 프로젝트에 구현해야함

1. 충돌 감지를 주변 타일인덱스에 wall이 존재하는지를 보기만 하기.

1. 모든 AActor를 렌더리스트에 넣고 클리어 하지말고 (트리 노드가 만들어질때마다 new가 발생)
움직이는 노드의 key값만 변경함


2. Actor가 움직일때마다 multimap에서 찾은후 재배열

3. 물풍선 터질때 물풍선 범위에 있는 actor들을 효과적으로 가져오는법?
-> 충돌, 물풍선 범위 감지는 타일 기준으로 해야함.


4. 캐릭터 애니메이션에 그림자 넣기

5. AI는 FSM으로 구현하기.
5. AStar, JPS 길찾기 알고리즘 적용해보기
강의 영상, 소스 코드도 포함
https://www.youtube.com/watch?v=rfOgaPXCADQ&list=PLJyxKbGKjtQtoUmxC9oyeOqmExB3u2ZxB&index=1





4. URenderComponent가 가진 UImage* StaticImage의 UImage주소를 변경시켜주는게
Animation의 역할 ★되도록이면 면접 대비를 위해 FSM으로 구현

5. FLevelData라는 직렬화가능 구조체를 만들고,
이 구조체를 받아서 게임 스테이지에 맞게 SpawnActor해주는 BeginPlay() 오버로드된 함수 생성 

6. 멈춰도 바로 멈추는 것이 아니라 여러 상태와 조건에 따라 
어떻게 animation이 바뀔지를 결정할 수 있는 FSM모델 구현

7. 애니메이션 PlayAnimation if문 너무 많은거 리팩토링하기

8. UI렌더링 제외 시키는 최적화 방법 마련하기

9. 코드 내에 리터럴 값을 가지지 않도록 전부 멤버 변수화 시키기